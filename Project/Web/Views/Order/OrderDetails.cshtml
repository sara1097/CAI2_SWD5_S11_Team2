@model Domain.Models.Order
@using Domain.Models

@{
    bool isPartial = Context.Request.Query.ContainsKey("partial") && Context.Request.Query["partial"] == "true";
    Layout = isPartial ? null : "_Layout";

    if (!isPartial)
    {
        ViewData["Title"] = "Order Details";
    }
}

@if (!isPartial)
{
    <div class="container-fluid mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1>Order Details</h1>
            <a asp-controller="Admin" asp-action="Orders" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to Orders
            </a>
        </div>
    </div>
}

<div class="@(isPartial ? "" : "container-fluid")">
    <div class="row">
        <!-- Left column: Order Details -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Order Information</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Order Number:</div>
                        <div class="col-md-7">@Model.OrderNumber</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Order Date:</div>
                        <div class="col-md-7">@Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Status:</div>
                        <div class="col-md-7">
                            <span class="badge @GetStatusBadgeClass(Model.Status)">
                                @Model.Status
                            </span>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Shipped Date:</div>
                        <div class="col-md-7">
                            @(Model.ShippedDate.HasValue ? Model.ShippedDate.Value.ToString("MMM dd, yyyy") : "Not shipped yet")
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Delivered Date:</div>
                        <div class="col-md-7">
                            @(Model.DeliveredDate.HasValue ? Model.DeliveredDate.Value.ToString("MMM dd, yyyy") : "Not delivered yet")
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Total Amount:</div>
                        <div class="col-md-7">@Model.TotalAmount.ToString("C")</div>
                    </div>
                </div>
            </div>

            @if (!isPartial)
            {
                <div class="card mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0">Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex gap-2">
                            <!-- Update Status Dropdown -->
                            <div class="dropdown">
                                <button class="btn btn-warning dropdown-toggle" type="button" id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    Update Status
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="statusDropdown">
                                    @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                                    {
                                        <li>
                                            <form asp-controller="Order" asp-action="UpdateStatus" method="post" class="dropdown-item-form">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="orderId" value="@Model.Id" />
                                                <input type="hidden" name="newStatus" value="@status" />
                                                <button type="submit" class="dropdown-item @(Model.Status == status ? "active" : "")">
                                                    @status.ToString()
                                                </button>
                                            </form>
                                        </li>
                                    }
                                </ul>
                            </div>
                            @if (Model.Status == OrderStatus.Pending || Model.Status == OrderStatus.Processing)
                            {
                                <form asp-controller="Order" asp-action="Cancel" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="orderId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to cancel this order?')">
                                        <i class="bi bi-x-circle"></i> Cancel Order
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Right column: Customer & Payment Details -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">Customer Information</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Customer ID:</div>
                        <div class="col-md-7">@Model.CustomerId</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Shipping Address:</div>
                        <div class="col-md-7">@Model.ShippingAddress</div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Payment Information</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Payment Method:</div>
                        <div class="col-md-7">@Model.PaymentMethod</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-5 fw-bold">Payment Status:</div>
                        <div class="col-md-7">
                            <span class="badge @GetPaymentStatusBadgeClass(Model.PaymentStatus)">
                                @Model.PaymentStatus
                            </span>
                        </div>
                    </div>
                    @if (Model.Payment != null)
                    {
                        <div class="row mb-2">
                            <div class="col-md-5 fw-bold">Transaction ID:</div>
                            <div class="col-md-7">@Model.Payment.TransactionId</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-md-5 fw-bold">Payment Date:</div>
                            <div class="col-md-7">@Model.Payment.PaymentDate.ToString("MMM dd, yyyy HH:mm")</div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Order Items Table -->
    <div class="card mt-4">
        <div class="card-header bg-dark text-white">
            <h5 class="mb-0">Order Items</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Product ID</th>
                            <th>Product</th>

                            <th>Unit Price</th>
                            <th>Quantity</th>
                            <th>Subtotal</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.OrderItems != null && Model.OrderItems.Any())
                        {
                            foreach (var item in Model.OrderItems)
                            {
                                <tr>
                                    <td>@item.ProductId</td>
                                    <td>@(item.Product?.Name)</td>

                                    <td>@item.UnitPrice.ToString("C")</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.SubtotalAmount.ToString("C")</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center">No items found for this order</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr class="table-dark">
                            <th colspan="6" class="text-end">Total:</th>
                            <th>@Model.TotalAmount.ToString("C")</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@if (!isPartial)
{
    @section Styles {
    <style>
        .dropdown-item-form {
            margin: 0;
            padding: 0;
        }

            .dropdown-item-form .dropdown-item {
                padding: 0.25rem 1.5rem;
                cursor: pointer;
                width: 100%;
                text-align: left;
                background: none;
                border: none;
            }

                .dropdown-item-form .dropdown-item:hover {
                    background-color: #f8f9fa;
                }

                .dropdown-item-form .dropdown-item.active {
                    background-color: #e9ecef;
                    font-weight: bold;
                }
    </style>
    }
}

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-warning text-dark",
            OrderStatus.Processing => "bg-info",
            OrderStatus.Shipped => "bg-primary",
            OrderStatus.Delivered => "bg-success",
            OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetPaymentStatusBadgeClass(PaymentStatus status)
    {
        return status switch
        {
            PaymentStatus.Pending => "bg-warning text-dark",
            PaymentStatus.Paid => "bg-success",
            PaymentStatus.Failed => "bg-danger",
            _ => "bg-secondary"
        };
    }
}